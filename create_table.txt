BEGIN;

CREATE TABLE IF NOT EXISTS public.user_admin
(
    id_user serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    role character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id_user)
);

INSERT INTO public.user_admin (username, password, role)
VALUES ('admin', 'admin', 'admin');

CREATE TABLE IF NOT EXISTS public.final_defect
(
    id_final serial NOT NULL,
    path_gambar character varying COLLATE pg_catalog."default" NOT NULL,
    class character varying COLLATE pg_catalog."default" NOT NULL,
    conf_level numeric(5,2) NOT NULL,
    x0 integer NOT NULL,
    y0 integer NOT NULL,
    x1 integer NOT NULL,
    y1 integer NOT NULL,
    id_anomaly integer,
    id_defect integer,
    id_user integer NOT NULL,
    id_training integer,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT final_pkey PRIMARY KEY (id_final)
);

CREATE TABLE IF NOT EXISTS public.operation
(
    id_operation serial NOT NULL,
    start_time timestamp with time zone NOT NULL DEFAULT now(),
    end_time timestamp with time zone NOT NULL DEFAULT now(),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    id_user integer NOT NULL,
    CONSTRAINT operation_pkey PRIMARY KEY (id_operation)
);

CREATE TABLE IF NOT EXISTS public.production_anomaly
(
    id_anomaly serial NOT NULL,
    path_gambar character varying COLLATE pg_catalog."default" NOT NULL,
    conf_level numeric(5,2) NOT NULL,
    x0 integer NOT NULL,  -- Fixed column name from `xo` to `x0`
    y0 integer NOT NULL,
    x1 integer NOT NULL,
    y1 integer NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT anomaly_pkey PRIMARY KEY (id_anomaly)
);

CREATE TABLE IF NOT EXISTS public.production_defect
(
    id_defect serial NOT NULL,
    path_gambar character varying COLLATE pg_catalog."default" NOT NULL,
    class character varying COLLATE pg_catalog."default" NOT NULL,
    conf_level numeric(5,2) NOT NULL,
    x0 integer NOT NULL,
    y0 integer NOT NULL,
    x1 integer NOT NULL,
    y1 integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT defect_pkey PRIMARY KEY (id_defect)
);

CREATE TABLE IF NOT EXISTS public.training
(
    id_training serial NOT NULL,
    path_weight character varying(100) COLLATE pg_catalog."default" NOT NULL,
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone NOT NULL,
    "mAP50" numeric(5,2) NOT NULL,
    "precision" numeric(5,2) NOT NULL,
    recall numeric(5,2) NOT NULL,
    id_user integer NOT NULL,
    CONSTRAINT training_pkey PRIMARY KEY (id_training)
);

-- Foreign Key Constraints with Unique Names and Improved ON DELETE Actions
ALTER TABLE IF EXISTS public.final_defect
    ADD CONSTRAINT foreign_anomaly_final_defect FOREIGN KEY (id_anomaly)
    REFERENCES public.production_anomaly (id_anomaly)
    ON UPDATE CASCADE
    ON DELETE SET NULL;

ALTER TABLE IF EXISTS public.final_defect
    ADD CONSTRAINT foreign_defect_final_defect FOREIGN KEY (id_defect)
    REFERENCES public.production_defect (id_defect)
    ON UPDATE CASCADE
    ON DELETE SET NULL;

ALTER TABLE IF EXISTS public.final_defect
    ADD CONSTRAINT foreign_training_final_defect FOREIGN KEY (id_training)
    REFERENCES public.training (id_training)
    ON UPDATE CASCADE
    ON DELETE SET NULL;

ALTER TABLE IF EXISTS public.final_defect
    ADD CONSTRAINT foreign_user_final_defect FOREIGN KEY (id_user)
    REFERENCES public.user_admin (id_user)
    ON UPDATE CASCADE
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.operation
    ADD CONSTRAINT foreign_user_operation FOREIGN KEY (id_user)
    REFERENCES public.user_admin (id_user)
    ON UPDATE CASCADE
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.training
    ADD CONSTRAINT foreign_user_training FOREIGN KEY (id_user)
    REFERENCES public.user_admin (id_user)
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;